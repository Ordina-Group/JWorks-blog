name: Deploy blog to AWS PRD env

on:
  push:
    branches:
      - source
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  AWS_ROLE: 'arn:aws:iam::264585740784:role/JworksTechBlogGithubRole'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Setup Ruby
        uses: ruby/setup-ruby@70da3bbf44ac06db1b0547ce2acc9380a5270d1e # v1.175.0
        with:
          ruby-version: '3.2'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl ""
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: blog
          path: _site
          if-no-files-found: error
          retention-days: 5
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@7bfa3a4717ef143a604ee0a99d859b8886a96d00 # v1.9.3
        id: repository-token
        with:
          app-id: ${{ vars.ORDINA_GROUP_BOT_APP_ID }}
          private-key: ${{ secrets.ORDINA_GROUP_BOT_CERT }}
          owner: ${{ github.repository_owner }}
          repositories: "jworks-terraform-modules"
      - name: Checkout
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Setup git creds
        run: git config --global url."https://${{ vars.ORDINA_GROUP_BOT_APP_ID }}:${{ steps.repository-token.outputs.token }}@github".insteadOf https://github

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: eu-west-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36 # v3.0.0

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: infra/env/prd

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: infra/env/prd

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: infra/env/prd

      - name: Terraform Plan
        id: plan
        run: terraform plan
        working-directory: infra/env/prd

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        working-directory: infra/env/prd
  upload:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: blog
          path: blog
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: eu-west-1
      - name: Upload files to s3
        run: aws s3 sync ./blog s3://blog.ordina-jworks.io



